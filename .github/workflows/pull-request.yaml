name: Pull Request React App
on:
  pull_request:
    types: [opened, edited, reopened, synchronize]
env:
  CI: true
jobs:
    buildApp:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v4
          - name: Use Node.js
            uses: actions/setup-node@v4
            with:
              node-version: '20.x'
          - name: Clean install and Build
            run: |
              npm ci
              npm run build --if-present
            working-directory: ./app/simple-homepage

    dockerizeApp:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        - name: Build and push
          uses: docker/build-push-action@v6
          with:
            push: true
            tags: ${{ vars.DOCKERHUB_USERNAME }}magoya-app:latest
            context: ./app/simple-homepage/.

    buildInfra:
         runs-on: ubuntu-latest
         permissions:
          contents: read
          pull-requests: write
         steps:
          - uses: actions/checkout@v4
          - uses: hashicorp/setup-terraform@v3
            with:
              terraform_version: "1.1.7"
              plan_only: true
          - name: Terraform fmt
            id: fmt
            run: terraform fmt -check
            continue-on-error: true
            working-directory: ./terraform

          - name: Terraform Init
            id: init
            run: terraform init
            working-directory: ./terraform

          - name: Terraform Validate
            id: validate
            run: terraform validate -no-color
            working-directory: ./terraform

          - name: Configure AWS credentials
            uses: aws-actions/configure-aws-credentials@v2
            with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: us-west-1

          - name: Terraform Plan
            id: plan
            run: terraform plan -no-color
            continue-on-error: true
            working-directory: ./terraform